cmake_minimum_required(VERSION 3.10)

project(tetra-ctrl)

set(CMAKE_CXX_STANDARD 17)
set(ENABLE_PRECOMPILED_HEADERS OFF)

# Disable building extras we won't need (pure C++ project)
set(NANOGUI_BUILD_EXAMPLE OFF CACHE BOOL " " FORCE)
set(NANOGUI_BUILD_PYTHON  OFF CACHE BOOL " " FORCE)
set(NANOGUI_INSTALL       OFF CACHE BOOL " " FORCE)

add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/glad)
add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/nanogui)
add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/rtmidi)

# For reliability of parallel build, make the NanoGUI targets dependencies
set_property(TARGET glfw glfw_objects nanogui PROPERTY FOLDER "dependencies")

# Various preprocessor definitions have been generated by NanoGUI
add_definitions(${NANOGUI_EXTRA_DEFS})

# On top of adding the path to nanogui/include, you may need extras
include_directories(${NANOGUI_EXTRA_INCS})

add_executable(${PROJECT_NAME} src/main.cpp)

target_include_directories(${PROJECT_NAME} PUBLIC "${PROJECT_BINARY_DIR}" nanogui/include rtmidi/)

target_link_libraries(${PROJECT_NAME} glad nanogui ${NANOGUI_EXTRA_LIBS} rtmidi)